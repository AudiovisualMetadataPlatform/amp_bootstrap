---
amp_bootstrap:
    # configuration for the AMP bootstrap    
    



 


amp:
    # This is overall configuration -- things that apply to all components
    # this is the hostname of the machine serving AMP.  For a workstation
    # deployment, localhost can be used.
    url_host: localhost
    url_https: false
    # relative to the installation directory.
    data_root: data

galaxy:    
    # host:  if it doesn't exist, the amp/url_host will be used.  If is null 
    # then it will listen on all interfaces, otherwise the value will be used.    
    host: null
    port: 8100

    # galaxy root URL
    root: /rest/galaxy

    # Authentication bits
    user_id: xxxxx  # random garbage characters...
    username: xxx@somewhere.edu  # this should be an email address
    password: xxxxxxxxxx

    # this should be a random string of 5-56 characters that is used to generate encoded
    # content between the galaxy instance and the client.  If the secret is
    # changed after the system is set up, all of the previous data will be inaccessable.
    id_secret: CHANGE ME


    # generic uwsgi settings -- these are copied as-is into the UWSGI
    # section of the configuration file.  Generally there's no need to mess
    # with these.  Note:  that section of the yaml file isn't really yaml, so
    # arrays will be written as multiple key/value pairs.
    uwsgi:
        buffer-size: 16834
        processes: 1
        thunder-lock: false
        enable-threads: true
        threads: 4
        offload-threads: 2
        die-on-term: true
        hook-master-start: 
          - unix_signal:2 gracefully_kill_them_all
          - unix_signal_15 gracefully_kill_them_all
        master: false
        pythonpath: lib
        virtualenv: .venv
        py-call-osafterfork: false
        umask: '002'
        static-map:
          - /static=static
          - /favicon.ico=static/favicon.ico
        static-safe: client/src/assets

    # Generic galaxy settings -- copied as-is to the galaxy section
    # of the configuration.  You shouldn't need to mess with this.
    galaxy:
        watch_tools: polling
        allow_path_paste: true
        require_login: true
        allow_user_creation: false
        x_frame_options:
        logging:
            version: 1
            disable_existing_loggers: False            
            filters: 
                stack: 
                    (): galaxy.web_stack.application_stack_log_filter
            formatters: 
                stack: 
                    (): galaxy.web_stack.application_stack_log_formatter  
            handlers: 
                console: 
                    class: logging.StreamHandler
                    level: DEBUG
                    stream: ext://sys.stderr
                    filters: [stack]
                    formatter: stack      
                rootlog:
                    class: logging.handlers.TimedRotatingFileHandler
                    when: midnight
                    level: INFO
                    filename: logs/root.log
                    filters: [stack]
                    formatter: stack
                galaxylog:
                    class: logging.handlers.TimedRotatingFileHandler
                    when: midnight
                    level: DEBUG
                    filename: logs/galaxy.log
                    filters: [stack]
                    formatter: stack
                perflog:
                    class: logging.FileHandler
                    level: DEBUG
                    filename: logs/performance.log

            root: 
                handlers: [rootlog]
                level: INFO
            
            loggers: 
                paste.httpserver.ThreadPool: 
                    level: WARN
                    qualname: paste.httpserver.ThreadPool                
                sqlalchemy:
                    level: WARN
                    qualname: sqlalchemy
                sqlalchemy_json.track:
                    level: WARN  
                    qualname: sqlalchemy_json.track
                urllib3.connectionpool: 
                    level: WARN
                    qualname: urllib3.connectionpool                
                routes.middleware: 
                    level: WARN
                    qualname: routes.middleware
                amqp:
                    level: INFO
                    qualname: amqp
                botocore: 
                    level: INFO
                    qualname: botocore
                galaxy:
                    handlers: [galaxylog]
                    level: DEBUG
                    propagate: false
                    qualname: galaxy
                performance:  
                    handlers: [perflog]
                    level: DEBUG
                    propagate: false



tomcat:
    # The main tomcat port.  The shutdown port will be this port + 1
    port: 8080

ui:
    # UI configuration.
    user_guide_url: https://your.host/AMP/
    unit: AMP Pilot Unit

rest:
    # Configuration for the AMP rest backend
    
    # paths, relative to the amp:data_root directory, if the value is a relative path
    logging_path: logs
    storage_path: media
    dropbox_path: dropbox
    mediaprobe_path: MediaProbe

    # database configuration
    db_host: localhost
    db_name: xxxxxxx
    db_user: xxxxxxx
    db_pass: xxxxxxx

    # administrator user, set up on intial start.
    # NOTE: password should be changed interactively after initial start
    # NOTE: After initial setup, these values are ignored. 
    admin_username: xxxxxx
    admin_password: xxxxxx
    admin_email: some_user@example.com


    # email server config
    email_host: localhost

    # max xfer
    max_request: 5GB

    # external integration
    avalon_url: https://avalon.example.com
    avalon_token: some-really-long-token-bit
    external_sources: MCO,DarkAvalon,NYPL,WGBH,MusicLibary,IUArchives,Test
    task_managers: Jira,Trello

    # misc configuration
    workflow_edit_minutes: 60
    reset_password_minutes: 10
    activate_account_days: 7
    refresh_results_table_minutes: 300
    refresh_results_status_cron: 0 0/5 6-22 ? * *
    refresh_results_table_cron: 0 0 1 ? * MON-FRI
    logging_level: DEBUG
    environment: tst
    python: python3
    use_auth: true

    # secrets
    amppdui_hmgm_secret: hmgm-secret
    encryption_secret: encryption-secret
    jwt_secret: jwt-secret
    jwt_expiration_minutes: 240

    # not handled
    #amppd.corsOriginPattern = http://localhost:*


